"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultMongoURI = exports.default = void 0;

var _parsers = require("./Options/parsers");

const {
  ParseServerOptions
} = require('./Options/Definitions');

const logsFolder = (() => {
  let folder = './logs/';

  if (typeof process !== 'undefined' && process.env.TESTING === '1') {
    folder = './test_logs/';
  }

  if (process.env.PARSE_SERVER_LOGS_FOLDER) {
    folder = (0, _parsers.nullParser)(process.env.PARSE_SERVER_LOGS_FOLDER);
  }

  return folder;
})();

const {
  verbose,
  level
} = (() => {
  const verbose = process.env.VERBOSE ? true : false;
  return {
    verbose,
    level: verbose ? 'verbose' : undefined
  };
})();

const DefinitionDefaults = Object.keys(ParseServerOptions).reduce((memo, key) => {
  const def = ParseServerOptions[key];

  if (Object.prototype.hasOwnProperty.call(def, 'default')) {
    memo[key] = def.default;
  }

  return memo;
}, {});
const computedDefaults = {
  jsonLogs: process.env.JSON_LOGS || false,
  logsFolder,
  verbose,
  level
};

var _default = Object.assign({}, DefinitionDefaults, computedDefaults);

exports.default = _default;
const DefaultMongoURI = DefinitionDefaults.databaseURI;
exports.DefaultMongoURI = DefaultMongoURI;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kZWZhdWx0cy5qcyJdLCJuYW1lcyI6WyJQYXJzZVNlcnZlck9wdGlvbnMiLCJyZXF1aXJlIiwibG9nc0ZvbGRlciIsImZvbGRlciIsInByb2Nlc3MiLCJlbnYiLCJURVNUSU5HIiwiUEFSU0VfU0VSVkVSX0xPR1NfRk9MREVSIiwidmVyYm9zZSIsImxldmVsIiwiVkVSQk9TRSIsInVuZGVmaW5lZCIsIkRlZmluaXRpb25EZWZhdWx0cyIsIk9iamVjdCIsImtleXMiLCJyZWR1Y2UiLCJtZW1vIiwia2V5IiwiZGVmIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVmYXVsdCIsImNvbXB1dGVkRGVmYXVsdHMiLCJqc29uTG9ncyIsIkpTT05fTE9HUyIsImFzc2lnbiIsIkRlZmF1bHRNb25nb1VSSSIsImRhdGFiYXNlVVJJIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0EsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQXlCQyxPQUFPLENBQUMsdUJBQUQsQ0FBdEM7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHLENBQUMsTUFBTTtBQUN4QixNQUFJQyxNQUFNLEdBQUcsU0FBYjs7QUFDQSxNQUFJLE9BQU9DLE9BQVAsS0FBbUIsV0FBbkIsSUFBa0NBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxPQUFaLEtBQXdCLEdBQTlELEVBQW1FO0FBQ2pFSCxJQUFBQSxNQUFNLEdBQUcsY0FBVDtBQUNEOztBQUNELE1BQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSx3QkFBaEIsRUFBMEM7QUFDeENKLElBQUFBLE1BQU0sR0FBRyx5QkFBV0MsT0FBTyxDQUFDQyxHQUFSLENBQVlFLHdCQUF2QixDQUFUO0FBQ0Q7O0FBQ0QsU0FBT0osTUFBUDtBQUNELENBVGtCLEdBQW5COztBQVdBLE1BQU07QUFBRUssRUFBQUEsT0FBRjtBQUFXQyxFQUFBQTtBQUFYLElBQXFCLENBQUMsTUFBTTtBQUNoQyxRQUFNRCxPQUFPLEdBQUdKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSyxPQUFaLEdBQXNCLElBQXRCLEdBQTZCLEtBQTdDO0FBQ0EsU0FBTztBQUFFRixJQUFBQSxPQUFGO0FBQVdDLElBQUFBLEtBQUssRUFBRUQsT0FBTyxHQUFHLFNBQUgsR0FBZUc7QUFBeEMsR0FBUDtBQUNELENBSDBCLEdBQTNCOztBQUtBLE1BQU1DLGtCQUFrQixHQUFHQyxNQUFNLENBQUNDLElBQVAsQ0FBWWQsa0JBQVosRUFBZ0NlLE1BQWhDLENBQXVDLENBQUNDLElBQUQsRUFBT0MsR0FBUCxLQUFlO0FBQy9FLFFBQU1DLEdBQUcsR0FBR2xCLGtCQUFrQixDQUFDaUIsR0FBRCxDQUE5Qjs7QUFDQSxNQUFJSixNQUFNLENBQUNNLFNBQVAsQ0FBaUJDLGNBQWpCLENBQWdDQyxJQUFoQyxDQUFxQ0gsR0FBckMsRUFBMEMsU0FBMUMsQ0FBSixFQUEwRDtBQUN4REYsSUFBQUEsSUFBSSxDQUFDQyxHQUFELENBQUosR0FBWUMsR0FBRyxDQUFDSSxPQUFoQjtBQUNEOztBQUNELFNBQU9OLElBQVA7QUFDRCxDQU4wQixFQU14QixFQU53QixDQUEzQjtBQVFBLE1BQU1PLGdCQUFnQixHQUFHO0FBQ3ZCQyxFQUFBQSxRQUFRLEVBQUVwQixPQUFPLENBQUNDLEdBQVIsQ0FBWW9CLFNBQVosSUFBeUIsS0FEWjtBQUV2QnZCLEVBQUFBLFVBRnVCO0FBR3ZCTSxFQUFBQSxPQUh1QjtBQUl2QkMsRUFBQUE7QUFKdUIsQ0FBekI7O2VBT2VJLE1BQU0sQ0FBQ2EsTUFBUCxDQUFjLEVBQWQsRUFBa0JkLGtCQUFsQixFQUFzQ1csZ0JBQXRDLEM7OztBQUNSLE1BQU1JLGVBQWUsR0FBR2Ysa0JBQWtCLENBQUNnQixXQUEzQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG51bGxQYXJzZXIgfSBmcm9tICcuL09wdGlvbnMvcGFyc2Vycyc7XG5jb25zdCB7IFBhcnNlU2VydmVyT3B0aW9ucyB9ID0gcmVxdWlyZSgnLi9PcHRpb25zL0RlZmluaXRpb25zJyk7XG5jb25zdCBsb2dzRm9sZGVyID0gKCgpID0+IHtcbiAgbGV0IGZvbGRlciA9ICcuL2xvZ3MvJztcbiAgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLmVudi5URVNUSU5HID09PSAnMScpIHtcbiAgICBmb2xkZXIgPSAnLi90ZXN0X2xvZ3MvJztcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuUEFSU0VfU0VSVkVSX0xPR1NfRk9MREVSKSB7XG4gICAgZm9sZGVyID0gbnVsbFBhcnNlcihwcm9jZXNzLmVudi5QQVJTRV9TRVJWRVJfTE9HU19GT0xERVIpO1xuICB9XG4gIHJldHVybiBmb2xkZXI7XG59KSgpO1xuXG5jb25zdCB7IHZlcmJvc2UsIGxldmVsIH0gPSAoKCkgPT4ge1xuICBjb25zdCB2ZXJib3NlID0gcHJvY2Vzcy5lbnYuVkVSQk9TRSA/IHRydWUgOiBmYWxzZTtcbiAgcmV0dXJuIHsgdmVyYm9zZSwgbGV2ZWw6IHZlcmJvc2UgPyAndmVyYm9zZScgOiB1bmRlZmluZWQgfTtcbn0pKCk7XG5cbmNvbnN0IERlZmluaXRpb25EZWZhdWx0cyA9IE9iamVjdC5rZXlzKFBhcnNlU2VydmVyT3B0aW9ucykucmVkdWNlKChtZW1vLCBrZXkpID0+IHtcbiAgY29uc3QgZGVmID0gUGFyc2VTZXJ2ZXJPcHRpb25zW2tleV07XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZGVmLCAnZGVmYXVsdCcpKSB7XG4gICAgbWVtb1trZXldID0gZGVmLmRlZmF1bHQ7XG4gIH1cbiAgcmV0dXJuIG1lbW87XG59LCB7fSk7XG5cbmNvbnN0IGNvbXB1dGVkRGVmYXVsdHMgPSB7XG4gIGpzb25Mb2dzOiBwcm9jZXNzLmVudi5KU09OX0xPR1MgfHwgZmFsc2UsXG4gIGxvZ3NGb2xkZXIsXG4gIHZlcmJvc2UsXG4gIGxldmVsLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmFzc2lnbih7fSwgRGVmaW5pdGlvbkRlZmF1bHRzLCBjb21wdXRlZERlZmF1bHRzKTtcbmV4cG9ydCBjb25zdCBEZWZhdWx0TW9uZ29VUkkgPSBEZWZpbml0aW9uRGVmYXVsdHMuZGF0YWJhc2VVUkk7XG4iXX0=